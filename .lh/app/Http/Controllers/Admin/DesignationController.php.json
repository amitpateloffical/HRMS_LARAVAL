{
    "sourceFile": "app/Http/Controllers/Admin/DesignationController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1714471118741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1714471118741,
            "name": "Commit-0",
            "content": "<?php\r\n\r\nnamespace App\\Http\\Controllers\\Admin;\r\n\r\nuse App\\Models\\Department;\r\nuse App\\Models\\Designation;\r\nuse Illuminate\\Http\\Request;\r\nuse App\\Http\\Controllers\\Controller;\r\n\r\nclass DesignationController extends Controller\r\n{\r\n    /**\r\n     * Display a listing of the resource.\r\n     *\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function index()\r\n    {\r\n        $title = \"Designations\";\r\n        $designations = Designation::with('department')->get();\r\n        $departments = Department::get();\r\n        return view('backend.designations',compact('title','designations','departments'));\r\n    }\r\n\r\n    /**\r\n     * Store a newly created resource in storage.\r\n     *\r\n     * @param  \\Illuminate\\Http\\Request  $request\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    // public function store(Request $request)\r\n    // {\r\n\r\n    //     $this->validate($request, [\r\n    //         'designation' => 'required|max:200',\r\n    //         'department' => 'required',\r\n    //     ]);\r\n        \r\n    //     // Custom validation rule to check if the combination of designation and department already exists\r\n    //     $this->validate($request, [\r\n    //         'designation' => [\r\n    //             'required',\r\n    //             'max:200',\r\n    //             Designation  ::unique('designations')->where(function ($query) use ($request) {\r\n    //                 return $query->where('name', $request->designation)\r\n    //                              ->where('department_id', $request->department);\r\n    //             }),\r\n    //         ],\r\n    //         'department' => 'required',\r\n    //     ]);\r\n        \r\n    //     // If validation passes, create the record\r\n    //     Designation::create([\r\n    //         'name' => $request->designation,\r\n    //         'department_id' => $request->department,\r\n    //     ]);\r\n        \r\n    //     return back()->with('success','Designation added successfully!!!');\r\n    // }\r\n    public function store(Request $request)\r\n{\r\n    $this->validate($request, [\r\n        'designation' => 'required|max:200',\r\n        'department' => 'required',\r\n    ]);\r\n    \r\n    // Custom validation rule to check if the combination of designation and department already exists\r\n    $this->validate($request, [\r\n        'designation' => [\r\n            'required',\r\n            'max:200',\r\n            function ($attribute, $value, $fail) use ($request) {\r\n                $exists = Designation::where('name', $request->designation)\r\n                    ->where('department_id', $request->department)\r\n                    ->exists();\r\n    \r\n                if ($exists) {\r\n                    $fail('The combination of designation and department already exists.');\r\n                }\r\n            },\r\n        ],\r\n        'department' => 'required',\r\n    ]);\r\n    \r\n    // If validation passes, create the record\r\n    Designation::create([\r\n        'name' => $request->designation,\r\n        'department_id' => $request->department,\r\n    ]);\r\n    \r\n    return back()->with('success','Designation added successfully!!!');\r\n}\r\n\r\n\r\n    /**\r\n     * Display the specified resource.\r\n     *\r\n     * @param  int  $id\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function show($id)\r\n    {\r\n        //\r\n    }\r\n\r\n    /**\r\n     * Update the specified resource in storage.\r\n     *\r\n     * @param  \\Illuminate\\Http\\Request  $request\r\n     * \r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function update(Request $request)\r\n    {\r\n        $this->validate($request,[\r\n            'designation'=>'required|max:200',\r\n            'department'=>'required',\r\n        ]);\r\n        $designation = Designation::findOrFail($request->id);\r\n        $designation->update([\r\n            'name'=>$request->designation,\r\n            'department_id'=>$request->department,\r\n        ]);\r\n        return back()->with('success',\"designation has been updated\");\r\n    }\r\n\r\n    /**\r\n     * Remove the specified resource from storage.\r\n     *\r\n     * @param  int  $id\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function destroy(Request $request)\r\n    {\r\n        $designation = Designation::findOrFail($request->id);\r\n        $designation->delete();\r\n        return back()->with('success',\"Designation has been deleted successfully!!\");\r\n    }\r\n}\r\n"
        }
    ]
}