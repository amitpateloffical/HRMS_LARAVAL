{
    "sourceFile": "app/Http/Controllers/Admin/EmployeeController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1714380977690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1714380990805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+<?php\r\n+\r\n+namespace App\\Http\\Controllers\\Admin;\r\n+\r\n+use App\\Models\\Employee;\r\n+use App\\Models\\Department;\r\n+use App\\Models\\Designation;\r\n+use Illuminate\\Http\\Request;\r\n+use App\\Http\\Controllers\\Controller;\r\n+use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n+\r\n+class EmployeeController extends Controller\r\n+{\r\n+    /**\r\n+     * Display a listing of the resource.\r\n+     *\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function index()\r\n+    {\r\n+        $title=\"employees\";\r\n+        $designations = Designation::get();\r\n+        $departments = Department::get();\r\n+        $employees = Employee::with('department','designation')->get();\r\n+        return view('backend.employees',\r\n+        compact('title','designations','departments','employees'));\r\n+    }\r\n+\r\n+    /**\r\n+    * Display a listing of the resource.\r\n+    *\r\n+    * @return \\Illuminate\\Http\\Response\r\n+    */\r\n+   public function list()\r\n+   {\r\n+       $title=\"employees\";\r\n+       $designations = Designation::get();\r\n+       $departments = Department::get();\r\n+       $employees = Employee::with('department','designation')->get();\r\n+       return view('backend.employees-list',\r\n+       compact('title','designations','departments','employees'));\r\n+   }\r\n+\r\n+    /**\r\n+     * Store a newly created resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function store(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => 'required|integer', // Validate as an integer\r\n+            'designation' => 'required|integer',\r\n+        ]);\r\n+        $imageName = Null;\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }\r\n+        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n+        Employee::create([\r\n+            'uuid' =>$uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee has been added\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Display the specified resource.\r\n+     *\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function show($id)\r\n+    {\r\n+        //\r\n+    }\r\n+\r\n+    /**\r\n+     * Update the specified resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function update(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => 'required|integer', // Validate as an integer\r\n+            'designation' => 'required|integer',\r\n+        ]);\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }else{\r\n+            $imageName = Null;\r\n+        }\r\n+        \r\n+        $employee = Employee::find($request->id);\r\n+        $employee->update([\r\n+            'uuid' => $employee->uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee details has been updated\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Remove the specified resource from storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function destroy(Request $request)\r\n+    {\r\n+        $employee = Employee::find($request->id);\r\n+        $employee->delete();\r\n+        return back()->with('success',\"Employee has been deleted\");\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1714381210667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,10 +105,10 @@\n             'email'=>'required|email',\r\n             'phone'=>'nullable|max:15',\r\n             'company'=>'required|max:200',\r\n             'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|integer', // Validate as an integer\r\n-            'designation' => 'required|integer',\r\n+            'department' => 'required|integer|exists:departments,id', // Validate as an existing department ID\r\n+            'designation' => 'required|integer|exists:designations,id',\r\n         ]);\r\n         if ($request->hasFile('avatar')){\r\n             $imageName = time().'.'.$request->avatar->extension();\r\n             $request->avatar->move(public_path('storage/employees'), $imageName);\r\n@@ -143,150 +143,4 @@\n         $employee->delete();\r\n         return back()->with('success',\"Employee has been deleted\");\r\n     }\r\n }\r\n-<?php\r\n-\r\n-namespace App\\Http\\Controllers\\Admin;\r\n-\r\n-use App\\Models\\Employee;\r\n-use App\\Models\\Department;\r\n-use App\\Models\\Designation;\r\n-use Illuminate\\Http\\Request;\r\n-use App\\Http\\Controllers\\Controller;\r\n-use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n-\r\n-class EmployeeController extends Controller\r\n-{\r\n-    /**\r\n-     * Display a listing of the resource.\r\n-     *\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function index()\r\n-    {\r\n-        $title=\"employees\";\r\n-        $designations = Designation::get();\r\n-        $departments = Department::get();\r\n-        $employees = Employee::with('department','designation')->get();\r\n-        return view('backend.employees',\r\n-        compact('title','designations','departments','employees'));\r\n-    }\r\n-\r\n-    /**\r\n-    * Display a listing of the resource.\r\n-    *\r\n-    * @return \\Illuminate\\Http\\Response\r\n-    */\r\n-   public function list()\r\n-   {\r\n-       $title=\"employees\";\r\n-       $designations = Designation::get();\r\n-       $departments = Department::get();\r\n-       $employees = Employee::with('department','designation')->get();\r\n-       return view('backend.employees-list',\r\n-       compact('title','designations','departments','employees'));\r\n-   }\r\n-\r\n-    /**\r\n-     * Store a newly created resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function store(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department'=>'required',\r\n-            'designation'=>'required',\r\n-        ]);\r\n-        $imageName = Null;\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }\r\n-        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n-        Employee::create([\r\n-            'uuid' =>$uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee has been added\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Display the specified resource.\r\n-     *\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function show($id)\r\n-    {\r\n-        //\r\n-    }\r\n-\r\n-    /**\r\n-     * Update the specified resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function update(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|integer', // Validate as an integer\r\n-            'designation' => 'required|integer',\r\n-        ]);\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }else{\r\n-            $imageName = Null;\r\n-        }\r\n-        \r\n-        $employee = Employee::find($request->id);\r\n-        $employee->update([\r\n-            'uuid' => $employee->uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee details has been updated\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Remove the specified resource from storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function destroy(Request $request)\r\n-    {\r\n-        $employee = Employee::find($request->id);\r\n-        $employee->delete();\r\n-        return back()->with('success',\"Employee has been deleted\");\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1714381596579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,10 +105,10 @@\n             'email'=>'required|email',\r\n             'phone'=>'nullable|max:15',\r\n             'company'=>'required|max:200',\r\n             'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|integer|exists:departments,id', // Validate as an existing department ID\r\n-            'designation' => 'required|integer|exists:designations,id',\r\n+            'department' => 'required|exists:departments,id', // Validate as an existing department ID\r\n+            'designation' => 'required|exists:designations,id',\r\n         ]);\r\n         if ($request->hasFile('avatar')){\r\n             $imageName = time().'.'.$request->avatar->extension();\r\n             $request->avatar->move(public_path('storage/employees'), $imageName);\r\n"
                },
                {
                    "date": 1714381644122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+<?php\r\n+\r\n+namespace App\\Http\\Controllers\\Admin;\r\n+\r\n+use App\\Models\\Employee;\r\n+use App\\Models\\Department;\r\n+use App\\Models\\Designation;\r\n+use Illuminate\\Http\\Request;\r\n+use App\\Http\\Controllers\\Controller;\r\n+use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n+\r\n+class EmployeeController extends Controller\r\n+{\r\n+    /**\r\n+     * Display a listing of the resource.\r\n+     *\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function index()\r\n+    {\r\n+        $title=\"employees\";\r\n+        $designations = Designation::get();\r\n+        $departments = Department::get();\r\n+        $employees = Employee::with('department','designation')->get();\r\n+        return view('backend.employees',\r\n+        compact('title','designations','departments','employees'));\r\n+    }\r\n+\r\n+    /**\r\n+    * Display a listing of the resource.\r\n+    *\r\n+    * @return \\Illuminate\\Http\\Response\r\n+    */\r\n+   public function list()\r\n+   {\r\n+       $title=\"employees\";\r\n+       $designations = Designation::get();\r\n+       $departments = Department::get();\r\n+       $employees = Employee::with('department','designation')->get();\r\n+       return view('backend.employees-list',\r\n+       compact('title','designations','departments','employees'));\r\n+   }\r\n+\r\n+    /**\r\n+     * Store a newly created resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function store(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => 'required|integer', // Validate as an integer\r\n+            'designation' => 'required|integer',\r\n+        ]);\r\n+        $imageName = Null;\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }\r\n+        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n+        Employee::create([\r\n+            'uuid' =>$uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee has been added\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Display the specified resource.\r\n+     *\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function show($id)\r\n+    {\r\n+        //\r\n+    }\r\n+\r\n+    /**\r\n+     * Update the specified resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function update(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => 'required|string|exists:departments,id', // Validate as an existing department ID\r\n+            'designation' => 'required|string|exists:designations,id',\r\n+        ]);\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }else{\r\n+            $imageName = Null;\r\n+        }\r\n+        \r\n+        $employee = Employee::find($request->id);\r\n+        $employee->update([\r\n+            'uuid' => $employee->uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee details has been updated\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Remove the specified resource from storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function destroy(Request $request)\r\n+    {\r\n+        $employee = Employee::find($request->id);\r\n+        $employee->delete();\r\n+        return back()->with('success',\"Employee has been deleted\");\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1714381801703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,10 +105,18 @@\n             'email'=>'required|email',\r\n             'phone'=>'nullable|max:15',\r\n             'company'=>'required|max:200',\r\n             'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|string|exists:departments,id', // Validate as an existing department ID\r\n-            'designation' => 'required|string|exists:designations,id',\r\n+            'department' => [\r\n+                'required',\r\n+                'integer',\r\n+                Rule::exists('departments', 'id'),\r\n+            ],\r\n+            'designation' => [\r\n+                'required',\r\n+                'integer',\r\n+                Rule::exists('designations', 'id'),\r\n+            ],\r\n         ]);\r\n         if ($request->hasFile('avatar')){\r\n             $imageName = time().'.'.$request->avatar->extension();\r\n             $request->avatar->move(public_path('storage/employees'), $imageName);\r\n@@ -143,150 +151,4 @@\n         $employee->delete();\r\n         return back()->with('success',\"Employee has been deleted\");\r\n     }\r\n }\r\n-<?php\r\n-\r\n-namespace App\\Http\\Controllers\\Admin;\r\n-\r\n-use App\\Models\\Employee;\r\n-use App\\Models\\Department;\r\n-use App\\Models\\Designation;\r\n-use Illuminate\\Http\\Request;\r\n-use App\\Http\\Controllers\\Controller;\r\n-use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n-\r\n-class EmployeeController extends Controller\r\n-{\r\n-    /**\r\n-     * Display a listing of the resource.\r\n-     *\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function index()\r\n-    {\r\n-        $title=\"employees\";\r\n-        $designations = Designation::get();\r\n-        $departments = Department::get();\r\n-        $employees = Employee::with('department','designation')->get();\r\n-        return view('backend.employees',\r\n-        compact('title','designations','departments','employees'));\r\n-    }\r\n-\r\n-    /**\r\n-    * Display a listing of the resource.\r\n-    *\r\n-    * @return \\Illuminate\\Http\\Response\r\n-    */\r\n-   public function list()\r\n-   {\r\n-       $title=\"employees\";\r\n-       $designations = Designation::get();\r\n-       $departments = Department::get();\r\n-       $employees = Employee::with('department','designation')->get();\r\n-       return view('backend.employees-list',\r\n-       compact('title','designations','departments','employees'));\r\n-   }\r\n-\r\n-    /**\r\n-     * Store a newly created resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function store(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|integer', // Validate as an integer\r\n-            'designation' => 'required|integer',\r\n-        ]);\r\n-        $imageName = Null;\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }\r\n-        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n-        Employee::create([\r\n-            'uuid' =>$uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee has been added\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Display the specified resource.\r\n-     *\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function show($id)\r\n-    {\r\n-        //\r\n-    }\r\n-\r\n-    /**\r\n-     * Update the specified resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function update(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|exists:departments,id', // Validate as an existing department ID\r\n-            'designation' => 'required|exists:designations,id',\r\n-        ]);\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }else{\r\n-            $imageName = Null;\r\n-        }\r\n-        \r\n-        $employee = Employee::find($request->id);\r\n-        $employee->update([\r\n-            'uuid' => $employee->uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee details has been updated\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Remove the specified resource from storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function destroy(Request $request)\r\n-    {\r\n-        $employee = Employee::find($request->id);\r\n-        $employee->delete();\r\n-        return back()->with('success',\"Employee has been deleted\");\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1714381888503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,156 @@\n+<?php\r\n+\r\n+namespace App\\Http\\Controllers\\Admin;\r\n+\r\n+use App\\Models\\Employee;\r\n+use App\\Models\\Department;\r\n+use App\\Models\\Designation;\r\n+use Illuminate\\Http\\Request;\r\n+use App\\Http\\Controllers\\Controller;\r\n+use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n+use Illuminate\\Validation\\Rule;\r\n+\r\n+\r\n+class EmployeeController extends Controller\r\n+{\r\n+    /**\r\n+     * Display a listing of the resource.\r\n+     *\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function index()\r\n+    {\r\n+        $title=\"employees\";\r\n+        $designations = Designation::get();\r\n+        $departments = Department::get();\r\n+        $employees = Employee::with('department','designation')->get();\r\n+        return view('backend.employees',\r\n+        compact('title','designations','departments','employees'));\r\n+    }\r\n+\r\n+    /**\r\n+    * Display a listing of the resource.\r\n+    *\r\n+    * @return \\Illuminate\\Http\\Response\r\n+    */\r\n+   public function list()\r\n+   {\r\n+       $title=\"employees\";\r\n+       $designations = Designation::get();\r\n+       $departments = Department::get();\r\n+       $employees = Employee::with('department','designation')->get();\r\n+       return view('backend.employees-list',\r\n+       compact('title','designations','departments','employees'));\r\n+   }\r\n+\r\n+    /**\r\n+     * Store a newly created resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function store(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => 'required|integer', // Validate as an integer\r\n+            'designation' => 'required|integer',\r\n+        ]);\r\n+        $imageName = Null;\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }\r\n+        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n+        Employee::create([\r\n+            'uuid' =>$uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee has been added\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Display the specified resource.\r\n+     *\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function show($id)\r\n+    {\r\n+        //\r\n+    }\r\n+\r\n+    /**\r\n+     * Update the specified resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function update(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => [\r\n+                'required',\r\n+                'integer',\r\n+                Rule::exists('departments', 'id'),\r\n+            ],\r\n+            'designation' => [\r\n+                'required',\r\n+                'integer',\r\n+                Rule::exists('designations', 'id'),\r\n+            ],\r\n+        ]);\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }else{\r\n+            $imageName = Null;\r\n+        }\r\n+        \r\n+        $employee = Employee::find($request->id);\r\n+        $employee->update([\r\n+            'uuid' => $employee->uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee details has been updated\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Remove the specified resource from storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function destroy(Request $request)\r\n+    {\r\n+        $employee = Employee::find($request->id);\r\n+        $employee->delete();\r\n+        return back()->with('success',\"Employee has been deleted\");\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1714382154035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,158 +153,4 @@\n         $employee->delete();\r\n         return back()->with('success',\"Employee has been deleted\");\r\n     }\r\n }\r\n-<?php\r\n-\r\n-namespace App\\Http\\Controllers\\Admin;\r\n-\r\n-use App\\Models\\Employee;\r\n-use App\\Models\\Department;\r\n-use App\\Models\\Designation;\r\n-use Illuminate\\Http\\Request;\r\n-use App\\Http\\Controllers\\Controller;\r\n-use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n-\r\n-class EmployeeController extends Controller\r\n-{\r\n-    /**\r\n-     * Display a listing of the resource.\r\n-     *\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function index()\r\n-    {\r\n-        $title=\"employees\";\r\n-        $designations = Designation::get();\r\n-        $departments = Department::get();\r\n-        $employees = Employee::with('department','designation')->get();\r\n-        return view('backend.employees',\r\n-        compact('title','designations','departments','employees'));\r\n-    }\r\n-\r\n-    /**\r\n-    * Display a listing of the resource.\r\n-    *\r\n-    * @return \\Illuminate\\Http\\Response\r\n-    */\r\n-   public function list()\r\n-   {\r\n-       $title=\"employees\";\r\n-       $designations = Designation::get();\r\n-       $departments = Department::get();\r\n-       $employees = Employee::with('department','designation')->get();\r\n-       return view('backend.employees-list',\r\n-       compact('title','designations','departments','employees'));\r\n-   }\r\n-\r\n-    /**\r\n-     * Store a newly created resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function store(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|integer', // Validate as an integer\r\n-            'designation' => 'required|integer',\r\n-        ]);\r\n-        $imageName = Null;\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }\r\n-        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n-        Employee::create([\r\n-            'uuid' =>$uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee has been added\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Display the specified resource.\r\n-     *\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function show($id)\r\n-    {\r\n-        //\r\n-    }\r\n-\r\n-    /**\r\n-     * Update the specified resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function update(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => [\r\n-                'required',\r\n-                'integer',\r\n-                Rule::exists('departments', 'id'),\r\n-            ],\r\n-            'designation' => [\r\n-                'required',\r\n-                'integer',\r\n-                Rule::exists('designations', 'id'),\r\n-            ],\r\n-        ]);\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }else{\r\n-            $imageName = Null;\r\n-        }\r\n-        \r\n-        $employee = Employee::find($request->id);\r\n-        $employee->update([\r\n-            'uuid' => $employee->uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee details has been updated\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Remove the specified resource from storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function destroy(Request $request)\r\n-    {\r\n-        $employee = Employee::find($request->id);\r\n-        $employee->delete();\r\n-        return back()->with('success',\"Employee has been deleted\");\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1714382183124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n use Illuminate\\Http\\Request;\r\n use App\\Http\\Controllers\\Controller;\r\n use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n use Illuminate\\Validation\\Rule;\r\n+use Illuminate\\Support\\Facades\\Validator;\r\n \r\n \r\n class EmployeeController extends Controller\r\n {\r\n@@ -100,26 +101,40 @@\n      * @return \\Illuminate\\Http\\Response\r\n      */\r\n     public function update(Request $request)\r\n     {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => [\r\n-                'required',\r\n-                'integer',\r\n-                Rule::exists('departments', 'id'),\r\n-            ],\r\n-            'designation' => [\r\n-                'required',\r\n-                'integer',\r\n-                Rule::exists('designations', 'id'),\r\n-            ],\r\n+        // $this->validate($request,[\r\n+        //     'firstname'=>'required',\r\n+        //     'lastname'=>'required',\r\n+        //     'email'=>'required|email',\r\n+        //     'phone'=>'nullable|max:15',\r\n+        //     'company'=>'required|max:200',\r\n+        //     'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+        //     'department' => [\r\n+        //         'required',\r\n+        //         'integer',\r\n+        //         Rule::exists('departments', 'id'),\r\n+        //     ],\r\n+        //     'designation' => [\r\n+        //         'required',\r\n+        //         'integer',\r\n+        //         Rule::exists('designations', 'id'),\r\n+        //     ],\r\n+        // ]);\r\n+        $validator = Validator::make($request->all(), [\r\n+            'firstname' => 'required',\r\n+            'lastname' => 'required',\r\n+            'email' => 'required|email',\r\n+            'phone' => 'nullable|max:15',\r\n+            'company' => 'required|max:200',\r\n+            'avatar' => 'nullable|file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => 'required|integer',\r\n+            'designation' => 'required|integer',\r\n         ]);\r\n+        \r\n+        if ($validator->fails()) {\r\n+            return redirect()->back()->withErrors($validator)->withInput();\r\n+        }\r\n         if ($request->hasFile('avatar')){\r\n             $imageName = time().'.'.$request->avatar->extension();\r\n             $request->avatar->move(public_path('storage/employees'), $imageName);\r\n         }else{\r\n"
                },
                {
                    "date": 1714382254288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,156 @@\n+<?php\r\n+\r\n+namespace App\\Http\\Controllers\\Admin;\r\n+\r\n+use App\\Models\\Employee;\r\n+use App\\Models\\Department;\r\n+use App\\Models\\Designation;\r\n+use Illuminate\\Http\\Request;\r\n+use App\\Http\\Controllers\\Controller;\r\n+use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n+use Illuminate\\Validation\\Rule;\r\n+\r\n+\r\n+class EmployeeController extends Controller\r\n+{\r\n+    /**\r\n+     * Display a listing of the resource.\r\n+     *\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function index()\r\n+    {\r\n+        $title=\"employees\";\r\n+        $designations = Designation::get();\r\n+        $departments = Department::get();\r\n+        $employees = Employee::with('department','designation')->get();\r\n+        return view('backend.employees',\r\n+        compact('title','designations','departments','employees'));\r\n+    }\r\n+\r\n+    /**\r\n+    * Display a listing of the resource.\r\n+    *\r\n+    * @return \\Illuminate\\Http\\Response\r\n+    */\r\n+   public function list()\r\n+   {\r\n+       $title=\"employees\";\r\n+       $designations = Designation::get();\r\n+       $departments = Department::get();\r\n+       $employees = Employee::with('department','designation')->get();\r\n+       return view('backend.employees-list',\r\n+       compact('title','designations','departments','employees'));\r\n+   }\r\n+\r\n+    /**\r\n+     * Store a newly created resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function store(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => 'required|integer', // Validate as an integer\r\n+            'designation' => 'required|integer',\r\n+        ]);\r\n+        $imageName = Null;\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }\r\n+        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n+        Employee::create([\r\n+            'uuid' =>$uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee has been added\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Display the specified resource.\r\n+     *\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function show($id)\r\n+    {\r\n+        //\r\n+    }\r\n+\r\n+    /**\r\n+     * Update the specified resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function update(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => [\r\n+                'required',\r\n+                'integer',\r\n+                Rule::exists('departments', 'id'),\r\n+            ],\r\n+            'designation' => [\r\n+                'required',\r\n+                'integer',\r\n+                Rule::exists('designations', 'id'),\r\n+            ],\r\n+        ]);\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }else{\r\n+            $imageName = Null;\r\n+        }\r\n+        \r\n+        $employee = Employee::find($request->id);\r\n+        $employee->update([\r\n+            'uuid' => $employee->uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee details has been updated\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Remove the specified resource from storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function destroy(Request $request)\r\n+    {\r\n+        $employee = Employee::find($request->id);\r\n+        $employee->delete();\r\n+        return back()->with('success',\"Employee has been deleted\");\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1714382271706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+<?php\r\n+\r\n+namespace App\\Http\\Controllers\\Admin;\r\n+\r\n+use App\\Models\\Employee;\r\n+use App\\Models\\Department;\r\n+use App\\Models\\Designation;\r\n+use Illuminate\\Http\\Request;\r\n+use App\\Http\\Controllers\\Controller;\r\n+use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n+\r\n+class EmployeeController extends Controller\r\n+{\r\n+    /**\r\n+     * Display a listing of the resource.\r\n+     *\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function index()\r\n+    {\r\n+        $title=\"employees\";\r\n+        $designations = Designation::get();\r\n+        $departments = Department::get();\r\n+        $employees = Employee::with('department','designation')->get();\r\n+        return view('backend.employees',\r\n+        compact('title','designations','departments','employees'));\r\n+    }\r\n+\r\n+    /**\r\n+    * Display a listing of the resource.\r\n+    *\r\n+    * @return \\Illuminate\\Http\\Response\r\n+    */\r\n+   public function list()\r\n+   {\r\n+       $title=\"employees\";\r\n+       $designations = Designation::get();\r\n+       $departments = Department::get();\r\n+       $employees = Employee::with('department','designation')->get();\r\n+       return view('backend.employees-list',\r\n+       compact('title','designations','departments','employees'));\r\n+   }\r\n+\r\n+    /**\r\n+     * Store a newly created resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function store(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+           'department' => 'required|integer', // Validate as an integer\r\n+        'designation' => 'required|integer',\r\n+        ]);\r\n+        $imageName = Null;\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }\r\n+        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n+        Employee::create([\r\n+            'uuid' =>$uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee has been added\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Display the specified resource.\r\n+     *\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function show($id)\r\n+    {\r\n+        //\r\n+    }\r\n+\r\n+    /**\r\n+     * Update the specified resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function update(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department' => 'required|integer', // Validate as an integer\r\n+            'designation' => 'required|integer',\r\n+        ]);\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }else{\r\n+            $imageName = Null;\r\n+        }\r\n+        \r\n+        $employee = Employee::find($request->id);\r\n+        $employee->update([\r\n+            'uuid' => $employee->uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee details has been updated\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Remove the specified resource from storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function destroy(Request $request)\r\n+    {\r\n+        $employee = Employee::find($request->id);\r\n+        $employee->delete();\r\n+        return back()->with('success',\"Employee has been deleted\");\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1714384187930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,148 @@\n+<?php\r\n+\r\n+namespace App\\Http\\Controllers\\Admin;\r\n+\r\n+use App\\Models\\Employee;\r\n+use App\\Models\\Department;\r\n+use App\\Models\\Designation;\r\n+use Illuminate\\Http\\Request;\r\n+use App\\Http\\Controllers\\Controller;\r\n+use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n+\r\n+class EmployeeController extends Controller\r\n+{\r\n+    /**\r\n+     * Display a listing of the resource.\r\n+     *\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function index()\r\n+    {\r\n+        $title=\"employees\";\r\n+        $designations = Designation::get();\r\n+        $departments = Department::get();\r\n+        $employees = Employee::with('department','designation')->get();\r\n+        return view('backend.employees',\r\n+        compact('title','designations','departments','employees'));\r\n+    }\r\n+\r\n+    /**\r\n+    * Display a listing of the resource.\r\n+    *\r\n+    * @return \\Illuminate\\Http\\Response\r\n+    */\r\n+   public function list()\r\n+   {\r\n+       $title=\"employees\";\r\n+       $designations = Designation::get();\r\n+       $departments = Department::get();\r\n+       $employees = Employee::with('department','designation')->get();\r\n+       return view('backend.employees-list',\r\n+       compact('title','designations','departments','employees'));\r\n+   }\r\n+\r\n+    /**\r\n+     * Store a newly created resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function store(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+           'department' => 'required|integer', // Validate as an integer\r\n+        'designation' => 'required|integer',\r\n+        ]);\r\n+        $imageName = Null;\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }\r\n+        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n+        Employee::create([\r\n+            'uuid' =>$uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        return back()->with('success',\"Employee has been added\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Display the specified resource.\r\n+     *\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function show($id)\r\n+    {\r\n+        //\r\n+    }\r\n+\r\n+    /**\r\n+     * Update the specified resource in storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @param  int  $id\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function update(Request $request)\r\n+    {\r\n+        $this->validate($request,[\r\n+            'firstname'=>'required',\r\n+            'lastname'=>'required',\r\n+            'email'=>'required|email',\r\n+            'phone'=>'nullable|max:15',\r\n+            'company'=>'required|max:200',\r\n+            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n+            'department'=>'required',\r\n+            'designation'=>'required',\r\n+        ]);\r\n+        if ($request->hasFile('avatar')){\r\n+            $imageName = time().'.'.$request->avatar->extension();\r\n+            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n+        }else{\r\n+            $imageName = Null;\r\n+        }\r\n+        \r\n+        $employee = Employee::find($request->id);\r\n+        $employee->update([\r\n+            'uuid' => $employee->uuid,\r\n+            'firstname'=>$request->firstname,\r\n+            'lastname'=>$request->lastname,\r\n+            'email'=>$request->email,\r\n+            'phone'=>$request->phone,\r\n+            'company'=>$request->company,\r\n+            'department_id'=>$request->department,\r\n+            'designation_id'=>$request->designation,\r\n+            'avatar'=>$imageName,\r\n+        ]);\r\n+        storeActivityLog($userId=1, $action='Update', $description=$request->firstname.''.$request->lastname, $moduleName='Employee', $moduleId=$request->id ,$status='Employee has been updated');\r\n+\r\n+        return back()->with('success',\"Employee details has been updated\");\r\n+    }\r\n+\r\n+    /**\r\n+     * Remove the specified resource from storage.\r\n+     *\r\n+     * @param  \\Illuminate\\Http\\Request  $request\r\n+     * @return \\Illuminate\\Http\\Response\r\n+     */\r\n+    public function destroy(Request $request)\r\n+    {\r\n+        $employee = Employee::find($request->id);\r\n+        $employee->delete();\r\n+        return back()->with('success',\"Employee has been deleted\");\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1714384292959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,159 +55,11 @@\n             'email'=>'required|email',\r\n             'phone'=>'nullable|max:15',\r\n             'company'=>'required|max:200',\r\n             'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-           'department' => 'required|integer', // Validate as an integer\r\n-        'designation' => 'required|integer',\r\n-        ]);\r\n-        $imageName = Null;\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }\r\n-        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n-        Employee::create([\r\n-            'uuid' =>$uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee has been added\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Display the specified resource.\r\n-     *\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function show($id)\r\n-    {\r\n-        //\r\n-    }\r\n-\r\n-    /**\r\n-     * Update the specified resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function update(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n             'department'=>'required',\r\n             'designation'=>'required',\r\n         ]);\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }else{\r\n-            $imageName = Null;\r\n-        }\r\n-        \r\n-        $employee = Employee::find($request->id);\r\n-        $employee->update([\r\n-            'uuid' => $employee->uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        storeActivityLog($userId=1, $action='Update', $description=$request->firstname.''.$request->lastname, $moduleName='Employee', $moduleId=$request->id ,$status='Employee has been updated');\r\n-\r\n-        return back()->with('success',\"Employee details has been updated\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Remove the specified resource from storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function destroy(Request $request)\r\n-    {\r\n-        $employee = Employee::find($request->id);\r\n-        $employee->delete();\r\n-        return back()->with('success',\"Employee has been deleted\");\r\n-    }\r\n-}\r\n-<?php\r\n-\r\n-namespace App\\Http\\Controllers\\Admin;\r\n-\r\n-use App\\Models\\Employee;\r\n-use App\\Models\\Department;\r\n-use App\\Models\\Designation;\r\n-use Illuminate\\Http\\Request;\r\n-use App\\Http\\Controllers\\Controller;\r\n-use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n-\r\n-class EmployeeController extends Controller\r\n-{\r\n-    /**\r\n-     * Display a listing of the resource.\r\n-     *\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function index()\r\n-    {\r\n-        $title=\"employees\";\r\n-        $designations = Designation::get();\r\n-        $departments = Department::get();\r\n-        $employees = Employee::with('department','designation')->get();\r\n-        return view('backend.employees',\r\n-        compact('title','designations','departments','employees'));\r\n-    }\r\n-\r\n-    /**\r\n-    * Display a listing of the resource.\r\n-    *\r\n-    * @return \\Illuminate\\Http\\Response\r\n-    */\r\n-   public function list()\r\n-   {\r\n-       $title=\"employees\";\r\n-       $designations = Designation::get();\r\n-       $departments = Department::get();\r\n-       $employees = Employee::with('department','designation')->get();\r\n-       return view('backend.employees-list',\r\n-       compact('title','designations','departments','employees'));\r\n-   }\r\n-\r\n-    /**\r\n-     * Store a newly created resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function store(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-           'department' => 'required|integer', // Validate as an integer\r\n-        'designation' => 'required|integer',\r\n-        ]);\r\n         $imageName = Null;\r\n         if ($request->hasFile('avatar')){\r\n             $imageName = time().'.'.$request->avatar->extension();\r\n             $request->avatar->move(public_path('storage/employees'), $imageName);\r\n@@ -291,331 +143,4 @@\n         $employee->delete();\r\n         return back()->with('success',\"Employee has been deleted\");\r\n     }\r\n }\r\n-<?php\r\n-\r\n-namespace App\\Http\\Controllers\\Admin;\r\n-\r\n-use App\\Models\\Employee;\r\n-use App\\Models\\Department;\r\n-use App\\Models\\Designation;\r\n-use Illuminate\\Http\\Request;\r\n-use App\\Http\\Controllers\\Controller;\r\n-use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n-use Illuminate\\Validation\\Rule;\r\n-\r\n-\r\n-class EmployeeController extends Controller\r\n-{\r\n-    /**\r\n-     * Display a listing of the resource.\r\n-     *\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function index()\r\n-    {\r\n-        $title=\"employees\";\r\n-        $designations = Designation::get();\r\n-        $departments = Department::get();\r\n-        $employees = Employee::with('department','designation')->get();\r\n-        return view('backend.employees',\r\n-        compact('title','designations','departments','employees'));\r\n-    }\r\n-\r\n-    /**\r\n-    * Display a listing of the resource.\r\n-    *\r\n-    * @return \\Illuminate\\Http\\Response\r\n-    */\r\n-   public function list()\r\n-   {\r\n-       $title=\"employees\";\r\n-       $designations = Designation::get();\r\n-       $departments = Department::get();\r\n-       $employees = Employee::with('department','designation')->get();\r\n-       return view('backend.employees-list',\r\n-       compact('title','designations','departments','employees'));\r\n-   }\r\n-\r\n-    /**\r\n-     * Store a newly created resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function store(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|integer', // Validate as an integer\r\n-            'designation' => 'required|integer',\r\n-        ]);\r\n-        $imageName = Null;\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }\r\n-        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n-        Employee::create([\r\n-            'uuid' =>$uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee has been added\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Display the specified resource.\r\n-     *\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function show($id)\r\n-    {\r\n-        //\r\n-    }\r\n-\r\n-    /**\r\n-     * Update the specified resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function update(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => [\r\n-                'required',\r\n-                'integer',\r\n-                Rule::exists('departments', 'id'),\r\n-            ],\r\n-            'designation' => [\r\n-                'required',\r\n-                'integer',\r\n-                Rule::exists('designations', 'id'),\r\n-            ],\r\n-        ]);\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }else{\r\n-            $imageName = Null;\r\n-        }\r\n-        \r\n-        $employee = Employee::find($request->id);\r\n-        $employee->update([\r\n-            'uuid' => $employee->uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee details has been updated\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Remove the specified resource from storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function destroy(Request $request)\r\n-    {\r\n-        $employee = Employee::find($request->id);\r\n-        $employee->delete();\r\n-        return back()->with('success',\"Employee has been deleted\");\r\n-    }\r\n-}\r\n-<?php\r\n-\r\n-namespace App\\Http\\Controllers\\Admin;\r\n-\r\n-use App\\Models\\Employee;\r\n-use App\\Models\\Department;\r\n-use App\\Models\\Designation;\r\n-use Illuminate\\Http\\Request;\r\n-use App\\Http\\Controllers\\Controller;\r\n-use Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n-use Illuminate\\Validation\\Rule;\r\n-use Illuminate\\Support\\Facades\\Validator;\r\n-\r\n-\r\n-class EmployeeController extends Controller\r\n-{\r\n-    /**\r\n-     * Display a listing of the resource.\r\n-     *\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function index()\r\n-    {\r\n-        $title=\"employees\";\r\n-        $designations = Designation::get();\r\n-        $departments = Department::get();\r\n-        $employees = Employee::with('department','designation')->get();\r\n-        return view('backend.employees',\r\n-        compact('title','designations','departments','employees'));\r\n-    }\r\n-\r\n-    /**\r\n-    * Display a listing of the resource.\r\n-    *\r\n-    * @return \\Illuminate\\Http\\Response\r\n-    */\r\n-   public function list()\r\n-   {\r\n-       $title=\"employees\";\r\n-       $designations = Designation::get();\r\n-       $departments = Department::get();\r\n-       $employees = Employee::with('department','designation')->get();\r\n-       return view('backend.employees-list',\r\n-       compact('title','designations','departments','employees'));\r\n-   }\r\n-\r\n-    /**\r\n-     * Store a newly created resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function store(Request $request)\r\n-    {\r\n-        $this->validate($request,[\r\n-            'firstname'=>'required',\r\n-            'lastname'=>'required',\r\n-            'email'=>'required|email',\r\n-            'phone'=>'nullable|max:15',\r\n-            'company'=>'required|max:200',\r\n-            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|integer', // Validate as an integer\r\n-            'designation' => 'required|integer',\r\n-        ]);\r\n-        $imageName = Null;\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }\r\n-        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n-        Employee::create([\r\n-            'uuid' =>$uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee has been added\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Display the specified resource.\r\n-     *\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function show($id)\r\n-    {\r\n-        //\r\n-    }\r\n-\r\n-    /**\r\n-     * Update the specified resource in storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @param  int  $id\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function update(Request $request)\r\n-    {\r\n-        // $this->validate($request,[\r\n-        //     'firstname'=>'required',\r\n-        //     'lastname'=>'required',\r\n-        //     'email'=>'required|email',\r\n-        //     'phone'=>'nullable|max:15',\r\n-        //     'company'=>'required|max:200',\r\n-        //     'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n-        //     'department' => [\r\n-        //         'required',\r\n-        //         'integer',\r\n-        //         Rule::exists('departments', 'id'),\r\n-        //     ],\r\n-        //     'designation' => [\r\n-        //         'required',\r\n-        //         'integer',\r\n-        //         Rule::exists('designations', 'id'),\r\n-        //     ],\r\n-        // ]);\r\n-        $validator = Validator::make($request->all(), [\r\n-            'firstname' => 'required',\r\n-            'lastname' => 'required',\r\n-            'email' => 'required|email',\r\n-            'phone' => 'nullable|max:15',\r\n-            'company' => 'required|max:200',\r\n-            'avatar' => 'nullable|file|image|mimes:jpg,jpeg,png,gif',\r\n-            'department' => 'required|integer',\r\n-            'designation' => 'required|integer',\r\n-        ]);\r\n-        \r\n-        if ($validator->fails()) {\r\n-            return redirect()->back()->withErrors($validator)->withInput();\r\n-        }\r\n-        if ($request->hasFile('avatar')){\r\n-            $imageName = time().'.'.$request->avatar->extension();\r\n-            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n-        }else{\r\n-            $imageName = Null;\r\n-        }\r\n-        \r\n-        $employee = Employee::find($request->id);\r\n-        $employee->update([\r\n-            'uuid' => $employee->uuid,\r\n-            'firstname'=>$request->firstname,\r\n-            'lastname'=>$request->lastname,\r\n-            'email'=>$request->email,\r\n-            'phone'=>$request->phone,\r\n-            'company'=>$request->company,\r\n-            'department_id'=>$request->department,\r\n-            'designation_id'=>$request->designation,\r\n-            'avatar'=>$imageName,\r\n-        ]);\r\n-        return back()->with('success',\"Employee details has been updated\");\r\n-    }\r\n-\r\n-    /**\r\n-     * Remove the specified resource from storage.\r\n-     *\r\n-     * @param  \\Illuminate\\Http\\Request  $request\r\n-     * @return \\Illuminate\\Http\\Response\r\n-     */\r\n-    public function destroy(Request $request)\r\n-    {\r\n-        $employee = Employee::find($request->id);\r\n-        $employee->delete();\r\n-        return back()->with('success',\"Employee has been deleted\");\r\n-    }\r\n-}\r\n"
                }
            ],
            "date": 1714380977690,
            "name": "Commit-0",
            "content": "<?php\r\n\r\nnamespace App\\Http\\Controllers\\Admin;\r\n\r\nuse App\\Models\\Employee;\r\nuse App\\Models\\Department;\r\nuse App\\Models\\Designation;\r\nuse Illuminate\\Http\\Request;\r\nuse App\\Http\\Controllers\\Controller;\r\nuse Haruncpi\\LaravelIdGenerator\\IdGenerator;\r\n\r\nclass EmployeeController extends Controller\r\n{\r\n    /**\r\n     * Display a listing of the resource.\r\n     *\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function index()\r\n    {\r\n        $title=\"employees\";\r\n        $designations = Designation::get();\r\n        $departments = Department::get();\r\n        $employees = Employee::with('department','designation')->get();\r\n        return view('backend.employees',\r\n        compact('title','designations','departments','employees'));\r\n    }\r\n\r\n    /**\r\n    * Display a listing of the resource.\r\n    *\r\n    * @return \\Illuminate\\Http\\Response\r\n    */\r\n   public function list()\r\n   {\r\n       $title=\"employees\";\r\n       $designations = Designation::get();\r\n       $departments = Department::get();\r\n       $employees = Employee::with('department','designation')->get();\r\n       return view('backend.employees-list',\r\n       compact('title','designations','departments','employees'));\r\n   }\r\n\r\n    /**\r\n     * Store a newly created resource in storage.\r\n     *\r\n     * @param  \\Illuminate\\Http\\Request  $request\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function store(Request $request)\r\n    {\r\n        $this->validate($request,[\r\n            'firstname'=>'required',\r\n            'lastname'=>'required',\r\n            'email'=>'required|email',\r\n            'phone'=>'nullable|max:15',\r\n            'company'=>'required|max:200',\r\n            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n            'department'=>'required',\r\n            'designation'=>'required',\r\n        ]);\r\n        $imageName = Null;\r\n        if ($request->hasFile('avatar')){\r\n            $imageName = time().'.'.$request->avatar->extension();\r\n            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n        }\r\n        $uuid = IdGenerator::generate(['table' => 'employees','field'=>'uuid', 'length' => 7, 'prefix' =>'EMP-']);\r\n        Employee::create([\r\n            'uuid' =>$uuid,\r\n            'firstname'=>$request->firstname,\r\n            'lastname'=>$request->lastname,\r\n            'email'=>$request->email,\r\n            'phone'=>$request->phone,\r\n            'company'=>$request->company,\r\n            'department_id'=>$request->department,\r\n            'designation_id'=>$request->designation,\r\n            'avatar'=>$imageName,\r\n        ]);\r\n        return back()->with('success',\"Employee has been added\");\r\n    }\r\n\r\n    /**\r\n     * Display the specified resource.\r\n     *\r\n     * @param  int  $id\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function show($id)\r\n    {\r\n        //\r\n    }\r\n\r\n    /**\r\n     * Update the specified resource in storage.\r\n     *\r\n     * @param  \\Illuminate\\Http\\Request  $request\r\n     * @param  int  $id\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function update(Request $request)\r\n    {\r\n        $this->validate($request,[\r\n            'firstname'=>'required',\r\n            'lastname'=>'required',\r\n            'email'=>'required|email',\r\n            'phone'=>'nullable|max:15',\r\n            'company'=>'required|max:200',\r\n            'avatar'=>'file|image|mimes:jpg,jpeg,png,gif',\r\n            'department' => 'required|integer', // Validate as an integer\r\n            'designation' => 'required|integer',\r\n        ]);\r\n        if ($request->hasFile('avatar')){\r\n            $imageName = time().'.'.$request->avatar->extension();\r\n            $request->avatar->move(public_path('storage/employees'), $imageName);\r\n        }else{\r\n            $imageName = Null;\r\n        }\r\n        \r\n        $employee = Employee::find($request->id);\r\n        $employee->update([\r\n            'uuid' => $employee->uuid,\r\n            'firstname'=>$request->firstname,\r\n            'lastname'=>$request->lastname,\r\n            'email'=>$request->email,\r\n            'phone'=>$request->phone,\r\n            'company'=>$request->company,\r\n            'department_id'=>$request->department,\r\n            'designation_id'=>$request->designation,\r\n            'avatar'=>$imageName,\r\n        ]);\r\n        return back()->with('success',\"Employee details has been updated\");\r\n    }\r\n\r\n    /**\r\n     * Remove the specified resource from storage.\r\n     *\r\n     * @param  \\Illuminate\\Http\\Request  $request\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function destroy(Request $request)\r\n    {\r\n        $employee = Employee::find($request->id);\r\n        $employee->delete();\r\n        return back()->with('success',\"Employee has been deleted\");\r\n    }\r\n}\r\n"
        }
    ]
}